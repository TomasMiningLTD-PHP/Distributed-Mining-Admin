<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-03-03 at 21:35:30.
 */
class ServerTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Server
     */
    protected $server,$owner;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $db_info = Utility::readDbInfo();
        Database::$db = new Database($db_info[0],$db_info[1],$db_info[2],$db_info[3]);
        $this->owner = new User("owner_user", "password", "1");
        $this->owner->persist();
        $this->server = new Server("localhost",  $this->owner->id);
        $this->server->persist();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        $this->owner->delete();
    }

    /**
     * @covers Server::findByIp
     * @todo   Implement testFindByIp().
     */
    public function testFindByIp() {
       $server = Server::findByIp($this->server->ip);
       $this->assertEquals($this->server->id, $server->id);
    }

    /**
     * @covers Server::findById
     * @todo   Implement testFindById().
     */
    public function testFindById() {
        $server = Server::findById($this->server->id);
        $this->assertEquals($this->server->ip, $server->ip);
        
    }

    /**
     * @covers Server::findAll
     * @todo   Implement testFindAll().
     */
    public function testFindAll() {
        $s1 = new Server("192.168.0.2",  $this->owner->id);
        $s1->persist();
        $s2 = new Server("192.168.0.3",  $this->owner->id);
        $s2->persist();
        $results = Server::findAll();
        $this->assertEquals(3,  sizeof($results));
        $s1->delete();
        $s2->delete();
    }

    /**
     * @covers Server::persist
     * @todo   Implement testPersist().
     */
    public function testPersist() {
        $server = new Server("127.0.0.1",  $this->owner->id);
        $server->persist();
        $this->assertEquals($server->ip, Server::findById($server->id)->ip);
        $server->ip = "192.168.0.1";
        $server->persist();
        $s = Server::findById($server->id);
        $this->assertEquals("192.168.0.1", $s->ip);
        $server->delete();
    }

    /**
     * @covers Server::delete
     * @todo   Implement testDelete().
     */
    public function testDelete() {
        $this->server->delete();
        $server = Server::findById($this->server->id);
        $this->assertEquals(null, $server);
    }

}
