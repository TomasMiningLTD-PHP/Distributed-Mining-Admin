<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-03-03 at 18:37:24.
 */
class UserTest extends PHPUnit_Framework_TestCase {

    /**
     * @var User
     */
    protected  $user;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->user = new User("test_user", "password", 0);
        Database::$db = new Database();
        $this->user->persist();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
        
    }

    /**
     * @covers User::findByUsername
     * @todo   Implement testFindByUsername().
     */
    public function testFindByUsername() {
        $user = User::findByUsername('test_user');
        $this->assertEquals('test_user',$user->username);
        
    }

    /**
     * @covers User::findById
     * @todo   Implement testFindById().
     */
    public function testFindById() {
       $user = User::findById($this->user->id);
       $this->assertEquals($this->user->id, $user->id);
    }

    /**
     * @covers User::persist
     * @todo   Implement testPersist().
     */
    public function testPersist() {
        $user_tmp = new User("persist_user", "password", "0");
        $user_tmp->persist();
        $user = User::findById($user_tmp->id);
        $this->assertEquals($user->id, $user_tmp->id);
        $user_tmp->access = 1;
        $user_tmp->persist();
        $user = User::findById($user_tmp->id);
        $this->assertEquals(1, $user_tmp->access);
        $user_tmp->delete();
        
    }

    /**
     * @covers User::delete
     * @todo   Implement testDelete().
     */
    public function testDelete() {
        $user = User::findById($this->user->id);
        $this->assertEquals($this->user->id, $user->id);
        $user->delete();
        $user = User::findById($this->user->id);
        $this->assertEquals(null, $user);
        
    }

}
